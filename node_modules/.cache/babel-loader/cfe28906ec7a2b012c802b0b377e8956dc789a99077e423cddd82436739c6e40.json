{"ast":null,"code":"var _jsxFileName = \"/Users/josephinewu/Desktop/Year3/CSCI3172/lab7/src/components/ThemeSwitcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeSwitcher = () => {\n  _s();\n  //Initialize the state from localStorage if available\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light');\n\n  //Update the theme and save it to localStorage\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    localStorage.setItem('theme', newTheme);\n  };\n\n  //Apply the theme class to the document body\n  useEffect(() => {\n    document.body.className = theme;\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleTheme,\n    className: \"theme-switcher\",\n    children: [\"Switch to \", theme === 'light' ? 'Dark' : 'Light', \" Mode\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeSwitcher, \"3ZrzI9B7kxTUELTFlX71vn6HZU0=\");\n_c = ThemeSwitcher;\nexport default ThemeSwitcher;\nvar _c;\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ThemeSwitcher","_s","theme","setTheme","localStorage","getItem","toggleTheme","newTheme","setItem","document","body","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/josephinewu/Desktop/Year3/CSCI3172/lab7/src/components/ThemeSwitcher.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ThemeSwitcher = () => {\n  //Initialize the state from localStorage if available\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light');\n\n  //Update the theme and save it to localStorage\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    localStorage.setItem('theme', newTheme);\n  };\n\n  //Apply the theme class to the document body\n  useEffect(() => {\n    document.body.className = theme;\n  }, [theme]);\n\n  return (\n    <button onClick={toggleTheme} className=\"theme-switcher\">\n      Switch to {theme === 'light' ? 'Dark' : 'Light'} Mode\n    </button>\n  );\n};\n\nexport default ThemeSwitcher;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC;;EAE5E;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGL,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDC,QAAQ,CAACI,QAAQ,CAAC;IAClBH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;EACzC,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGT,KAAK;EACjC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAQa,OAAO,EAAEN,WAAY;IAACK,SAAS,EAAC,gBAAgB;IAAAE,QAAA,GAAC,YAC7C,EAACX,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,EAAC,OAClD;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAAChB,EAAA,CArBID,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAuBnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}